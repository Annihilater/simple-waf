package model

import "time"

// WAFLog represents a security event log
// @Description WAF 安全事件日志记录，包含完整的攻击事件信息
type WAFLog struct {
	RuleID          int       `json:"ruleId" bson:"ruleId" example:"100012"`                                                                                                                                                                                                                                                                                            // ID of the triggered rule
	SecLangRaw      string    `json:"secLangRaw" bson:"secLangRaw" example:"SecRule REQUEST_HEADERS:User-Agent \\\"@rx (?:acunetix|Morfeus|ZmEu)\\\" \\\"id:1008,phase:1,t:lowercase,t:none,pass,nolog,tag:'application-multi',tag:'language-multi',tag:'platform-multi',tag:'attack-reputation-scanner',severity:'CRITICAL',msg:'Web Application Scanner detected'\""` // Raw security language definition
	Severity        int       `json:"severity" bson:"severity" example:"2"`                                                                                                                                                                                                                                                                                             // Severity level of the event (0-5)
	Phase           int       `json:"phase" bson:"phase" example:"1"`                                                                                                                                                                                                                                                                                                   // Phase of the request processing
	SecMark         string    `json:"secMark" bson:"secMark" example:"web_attack_scanner"`                                                                                                                                                                                                                                                                              // Security mark of the rule
	Accuracy        int       `json:"accuracy" bson:"accuracy" example:"9"`                                                                                                                                                                                                                                                                                             // Accuracy level of the rule match (0-10)
	Payload         string    `json:"payload" bson:"payload" example:"Acunetix/1.0"`                                                                                                                                                                                                                                                                                    // Attack payload
	URI             string    `json:"uri" bson:"uri" example:"/api/users"`                                                                                                                                                                                                                                                                                              // Request URI
	ClientIPAddress string    `json:"clientIpAddress" bson:"clientIpAddress" example:"192.168.1.100"`                                                                                                                                                                                                                                                                   // Source IP address
	ServerIPAddress string    `json:"serverIpAddress" bson:"serverIpAddress" example:"10.0.0.5"`                                                                                                                                                                                                                                                                        // Destination IP address
	Domain          string    `json:"domain" bson:"domain" example:"example.com"`                                                                                                                                                                                                                                                                                       // Target domain
	Logs            []Log     `json:"logs" bson:"logs"`                                                                                                                                                                                                                                                                                                                 // Associated log entries
	Message         string    `json:"message" bson:"message" example:"Web Application Scanner detected"`                                                                                                                                                                                                                                                                // Event message or description
	Request         string    `json:"request" bson:"request" example:"GET /api/users HTTP/1.1\nHost: example.com\nUser-Agent: Acunetix/1.0\nAccept: */*"`                                                                                                                                                                                                               // Raw HTTP request
	Response        string    `json:"response" bson:"response" example:"HTTP/1.1 403 Forbidden\nServer: nginx\nDate: Wed, 18 Mar 2024 08:12:33 GMT\nContent-Type: text/html\nContent-Length: 146"`                                                                                                                                                                      // Raw HTTP response
	CreatedAt       time.Time `json:"createdAt" bson:"createdAt" example:"2024-03-18T08:12:33Z"`                                                                                                                                                                                                                                                                        // Timestamp of the event
}

// Log represents individual log entries
// @Description WAF 日志条目，包含详细的规则匹配信息
type Log struct {
	Message    string `json:"message" bson:"message" example:"Web Application Scanner detected"`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        // Log message
	Payload    string `json:"payload" bson:"payload" example:"Acunetix/1.0"`ttack payload
	RuleID     int    `json:"ruleId" bson:"ruleId" example:"100012"`ule identifier
	Severity   int    `json:"severity" bson:"severity" example:"2"`everity level (0-5)
	Phase      int    `json:"phase" bson:"phase" example:"1"`hase of the request processing
	SecMark    string `json:"secMark" bson:"secMark" example:"web_attack_scanner"`ecurity mark of the rule
	Accuracy   int    `json:"accuracy" bson:"accuracy" example:"9"`ccuracy level of the rule match (0-10)
	SecLangRaw string `json:"secLangRaw" bson:"secLangRaw" example:"SecRule REQUEST_HEADERS:User-Agent \\\"@rx (?:acunetix|Morfeus|ZmEu)\\\" \\\"id:1008,phase:1,t:lowercase,t:none,pass,nolog,tag:'application-multi',tag:'language-multi',tag:'platform-multi',tag:'attack-reputation-scanner',severity:'CRITICAL',msg:'Web Application Scanner detected'\""`aw security language
	LogRaw     string `json:"logRaw" bson:"logRaw" example:"[2024-03-18 08:12:33] [error] 12345#12345: *1234 ModSecurity: Access denied with code 403 (phase 1). Matched \\\"Operator 'Rx' with parameter '(?:acunetix|Morfeus|ZmEu)' against variable 'REQUEST_HEADERS:User-Agent'\\\" [file \\\"/etc/nginx/modsec/coreruleset/rules/REQUEST-913-SCANNER-DETECTION.conf\\\"] [line \\\"48\\\"] [id \\\"913100\\\"] [rev \\\"1\\\"] [msg \\\"Web Application Scanner detected\\\"] [data \\\"Matched Data: acunetix found within REQUEST_HEADERS:User-Agent: Acunetix/1.0\\\"] [severity \\\"CRITICAL\\\"] [ver \\\"OWASP_CRS/3.3.0\\\"] [maturity \\\"9\\\"] [accuracy \\\"9\\\"] [tag \\\"application-multi\\\"] [tag \\\"language-multi\\\"] [tag \\\"platform-multi\\\"] [tag \\\"attack-reputation-scanner\\\"], client: 192.168.1.100, server: example.com, request: \\\"GET /api/users HTTP/1.1\\\", host: \\\"example.com\\\""` // Raw log data
}

// GetCollectionName returns the MongoDB collection name for the WAFLog
// @Description 获取 WAFLog 对应的 MongoDB 集合名称
func (wafLog *WAFLog) GetCollectionName() string {
	return "waf_log"
}
