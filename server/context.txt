目录结构如下
web 前端

coraza-spoa  haproxy spoe agent
coraza-spoa/cmd 入口包，程序入口 
coraza-spoa/internal 内部包，负责内部功能实现
coraza-spoa/internal/log_store 负责防火墙日志存储处理
coraza-spoa/internal/agent spoe agent
coraza-spoa/internal/application spoe request response handler
coraza-spoa/pkg 对外包，可被其他模块调用
coraza-spoa/pkg/server/agent_server 生产 spoe agent，spoe agent 启动 停止 重启 等管理


pkg 公共包，负责一些多模块共同依赖的工具,可对外被其他模块使用
pkg/database/mongo 数据库包，处理数据库操作, 统一的数据库封装，单例模式，Connect 获取数据库clent，GetCollection 获取集合，使用 mongodb 驱动，驱动为 v2 版本 go.mongodb.org/mongo-driver/v2/mongo
pkg/utils 工具类，一些多模块都可能使用到的工具
pkg/model 模型层，负责数据模型定义, 一些共用数据模型


server 后端，负责后端接口处理，haproxy 启动管理，配置生成等，haproxy corazawaf spoe（ engine） 启动管理等
server 后端 web服务框架采用 go gin 框，gin-swagger 生成接口文档
server/cmd 入口包，主函数
server/internal 内部包，负责内部功能实现
server/internal/config 配置文件
server/internal/controller 控制器 mvc 中控制层
server/internal/controller/auth_controller.go 认证控制器，处理登录、注册、密码重置和用户管理等
server/internal/model 模型层，负责数据模型定义
server/internal/model/response.go 统一的API响应模型定义
server/internal/model/user.go 用户模型定义，包含角色系统
server/internal/model/role.go 角色和权限模型定义，支持RBAC权限控制
server/internal/service 服务层，负责业务逻辑处理
server/internal/service/auth_service.go 认证服务，处理用户认证逻辑、密码重置和用户管理
server/internal/service/daemon 守护进程层，负责守护进程管理,例如 haproxy 守护进程，corazawaf spoe（ engine） 守护进程等
server/internal/service/engine 引擎层，负责引擎管理,例如 corazawaf spoe（ engine） 引擎管理等
server/internal/service/haproxy 负责haproxy 的启动管理等，配置生成等
server/internal/service/daemon/runner 负责守护进程管理,例如 haproxy 守护进程，corazawaf spoe（ engine） 守护进程等
server/internal/router 路由层，负责路由定义
server/internal/router/router.go 路由定义，基于RBAC的权限控制，按功能模块组织路由
server/internal/middleware 中间件层，负责中间件处理，例如日志处理，jwt 鉴权，统一错误处理等
server/internal/middleware/auth.go JWT认证中间件，包含基于权限的访问控制
server/internal/repository 仓库层，负责数据库操作
server/internal/repository/user_repository.go 用户仓库，处理用户数据存取，包含初始用户创建
server/internal/repository/role_repository.go 角色仓库，处理角色数据存取，包含默认角色初始化
server/internal/utils 工具类，负责工具类定义
server/internal/utils/response 响应工具包，提供统一的API响应处理
server/internal/utils/jwt JWT工具包，处理令牌生成和验证，包含用户角色和权限信息

server/internal/pkg 对外包，可被其他模块调用